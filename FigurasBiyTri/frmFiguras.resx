<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>